language: java
jdk:
  - openjdk8

before_install:
  - chmod +x gradlew

# 오직 master브랜치에 push될때만 수행됩니다.
branches:
  only:
    - master

# Travis CI 서버의 Home
# Gradle을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여, 같은 의존성은 다음 배포때부터 다시 받지 않도록 설정합니다.
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master 브랜치에 PUSH 되었을때 수행하는 명령어입니다.
script: "./gradlew clean build"

before_deploy:
  - zip -r springboot-webservice *  # 현재 위치의 모든 파일을 springboot-webservice이름으로 압축(zip)
  - mkdir -p deploy                 # deploy라는 디렉토리를 Travis CI가 실행중인 위치에서 생성
  - mv springboot-webservice.zip deploy/springboot-webservice.zip  # springboot-webservice.zip 파일을 deploy/springboot-webservice.zip로 이동

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: bawker-spring-webservice-deploy # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: public_read
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true
    on:
      repo: bawker/spring-webservice
      branch: master

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: bawker-spring-webservice-deploy # S3 버킷
    key: springboot-webservice.zip # S3 버킷에 저장된 springboot-webservice.zip 파일을 EC2로 배포
    bundle_type: zip
    application: bawker-springboot-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: bawker-springboot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      repo: bawker/spring-webservice
      branch: master

# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - sehyun.park@webinars.co.kr
